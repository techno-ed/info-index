<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>管理员仪表板</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        h1, h2 {
            color: #333;
        }
        .container {
            display: flex;
            flex-direction: column;
            gap: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }
        .section {
            background: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            padding: 10px;
            border-bottom: 1px solid #ddd;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 3px;
            font-size: 14px;
        }
        button:hover {
            background-color: #45a049;
        }
        form {
            margin-top: 20px;
        }
        input[type="text"], input[type="email"], input[type="number"], input[type="password"], select {
            width: 100%;
            padding: 8px;
            margin: 5px 0;
            display: inline-block;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }
            .section {
                width: 100%;
            }
            table {
                font-size: 14px;
            }
            th, td {
                padding: 8px 5px;
            }
            button {
                padding: 8px 12px;
                font-size: 12px;
            }
        }
        .tabs {
            display: flex;
            margin-bottom: 20px;
        }
        .tab {
            padding: 10px 20px;
            cursor: pointer;
            border: 1px solid #ddd;
            background-color: #f1f1f1;
        }
        .tab.active {
            background-color: #fff;
            border-bottom: none;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
        .search-box {
            margin-bottom: 20px;
        }
        .search-box input[type="text"] {
            width: 70%;
            padding: 8px;
            margin-right: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .search-box button {
            padding: 8px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .search-box button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h1>管理员仪表板</h1>
    <div class="tabs">
        <div class="tab active" onclick="openTab(event, 'users')">用户</div>
        <div class="tab" onclick="openTab(event, 'content')">内容</div>
        <div class="tab" onclick="openTab(event, 'orders')">订单</div>
        <div class="tab" onclick="openTab(event, 'invitationCodes')">邀请码</div>
    </div>
    <div class="container">
        <div id="users" class="tab-content active">
            <h2>用户管理</h2>
            <div class="search-box">
                <input type="text" id="userSearchInput" placeholder="输入用户名搜索">
                <button onclick="searchUsers()">搜索</button>
            </div>
            <div style="overflow-x: auto;">
                <table id="userTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>用户名</th>
                            <th>角色</th>
                            <th>积分</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- 用户数据将通过 JavaScript 动态加载 -->
                    </tbody>
                </table>
            </div>
            <div id="userPagination" class="pagination">
                <button id="prevPage">上一页</button>
                <span id="currentPage"></span>
                <button id="nextPage">下一页</button>
            </div>
            <form id="addUserForm">
                <h3>添加新用户</h3>
                <input type="text" id="username" placeholder="用户名" required>
                <select id="role" required>
                    <option value="">选择角色</option>
                    <option value="user">普通用户</option>
                    <option value="admin">管理员</option>
                </select>
                <input type="password" id="password" placeholder="密码" required>
                <input type="submit" value="添加用户">
            </form>
        </div>
        <div id="content" class="tab-content">
            <h2>内容管理</h2>
            <button onclick="location.href='/admin/content/add'">添加新内容</button>
            <div style="overflow-x: auto;">
                <table id="contentTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>简介</th>
                            <th>预览</th>
                            <th>位置</th>
                            <th>价格</th>
                            <th>区域</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- 内容数据将通过 JavaScript 动态加载 -->
                    </tbody>
                </table>
            </div>
        </div>
        <div id="orders" class="tab-content">
            <h2>订单管理</h2>
            <div style="overflow-x: auto;">
                <table id="orderTable">
                    <thead>
                        <tr>
                            <th>订单ID</th>
                            <th>用户</th>
                            <th>内容ID</th>
                            <th>内容简介</th>
                            <th>创建时间</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- 订单数据将通过 JavaScript 动态加载 -->
                    </tbody>
                </table>
            </div>
        </div>
        <div id="invitationCodes" class="tab-content">
            <h2>邀请码管理</h2>
            <button onclick="generateInvitationCode()">生成新邀请码</button>
            <div style="overflow-x: auto;">
                <table id="invitationCodeTable">
                    <thead>
                        <tr>
                            <th>邀请码</th>
                            <th>状态</th>
                            <th>使用者</th>
                            <th>创建时间</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- 邀请码数据将通过 JavaScript 动态加载 -->
                                        </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        let currentPage = 1;
        const itemsPerPage = 20;

        // 修改加载用户数据的函数
        function loadUsers(page = 1, searchTerm = '') {
            fetch(`/admin/users?page=${page}&limit=${itemsPerPage}&search=${encodeURIComponent(searchTerm)}`)
                .then(response => response.json())
                .then(data => {
                    const { users, totalPages } = data;
                    const tbody = document.querySelector('#userTable tbody');
                    tbody.innerHTML = '';
                    users.forEach(user => {
                        tbody.innerHTML += `
                            <tr>
                                <td>${user.id}</td>
                                <td>${user.username}</td>
                                <td>${user.role}</td>
                                <td>
                                    <span id="points-${user.id}">${user.points}</span>
                                    <input type="number" id="edit-points-${user.id}" style="display:none;">
                                    <button onclick="editPoints(${user.id})">编辑</button>
                                    <button onclick="savePoints(${user.id})" style="display:none;">保存</button>
                                </td>
                                <td><button onclick="deleteUser(${user.id})">删除</button></td>
                            </tr>
                        `;
                    });

                    // 更新分页控件
                    document.getElementById('currentPage').textContent = `第 ${page} 页，共 ${totalPages} 页`;
                    document.getElementById('prevPage').disabled = page <= 1;
                    document.getElementById('nextPage').disabled = page >= totalPages;
                    currentPage = page;
                })
                .catch(error => console.error('Error loading users:', error));
        }

        // 添加分页事件监听器
        document.getElementById('prevPage').addEventListener('click', () => {
            if (currentPage > 1) {
                const searchTerm = document.getElementById('userSearchInput').value.trim();
                loadUsers(currentPage - 1, searchTerm);
            }
        });

        document.getElementById('nextPage').addEventListener('click', () => {
            const searchTerm = document.getElementById('userSearchInput').value.trim();
            loadUsers(currentPage + 1, searchTerm);
        });

        // 编辑积分
        function editPoints(userId) {
            const pointsSpan = document.getElementById(`points-${userId}`);
            const pointsInput = document.getElementById(`edit-points-${userId}`);
            const editButton = pointsSpan.nextElementSibling.nextElementSibling;
            const saveButton = editButton.nextElementSibling;

            pointsSpan.style.display = 'none';
            pointsInput.style.display = 'inline';
            pointsInput.value = pointsSpan.textContent;
            editButton.style.display = 'none';
            saveButton.style.display = 'inline';
        }

        // 保存积分
        function savePoints(userId) {
            const pointsInput = document.getElementById(`edit-points-${userId}`);
            const newPoints = pointsInput.value;

            fetch(`/admin/users/${userId}/points`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ points: newPoints }),
            })
            .then(response => {
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    loadUsers();  // 重新加载用户列表
                } else {
                    console.error('更新积分失败:', data.error);
                }
            })
            .catch(error => {
                console.error('更新积分时发生错误:', error);
                alert('更新积分失败: ' + error.message);
            });
        }

        // 修改加载内容的函数
        function loadContent() {
            fetch('/admin/content')
                .then(response => {
                    return response.json();
                })
                .then(content => {
                    const tbody = document.querySelector('#contentTable tbody');
                    tbody.innerHTML = '';
                    if (Array.isArray(content) && content.length > 0) {
                        content.forEach(item => {
                            tbody.innerHTML += `
                                <tr>
                                    <td>${item.id}</td>
                                    <td>${item.simpleInfo || ''}</td>
                                    <td>${item.preview ? '<img src="' + item.preview + '" alt="预览图" style="max-width:100px; max-height:100px;">' : '无预览图'}</td>
                                    <td>${item.location || ''}</td>
                                    <td>${item.price || ''}</td>
                                    <td>${item.area || ''}</td>
                                    <td>
                                        <button onclick="window.open('/admin/content/edit/${item.id}', '_blank')">编辑</button>
                                        <button onclick="deleteContent(${item.id})">删除</button>
                                        <div>详情: ${item.detail ? item.detail.substring(0, 50) : 'N/A'}...</div>
                                        <div>评论数: ${Array.isArray(item.commnet) ? item.commnet.length : 0}</div>
                                    </td>
                                </tr>
                            `;
                        });
                    } else {
                        tbody.innerHTML = '<tr><td colspan="7">没有找到内容</td></tr>';
                    }
                })
                .catch(error => {
                    const tbody = document.querySelector('#contentTable tbody');
                    tbody.innerHTML = `<tr><td colspan="7">加载内容时出错: ${error.message}</td></tr>`;
                });
        }

        // 确保在页面加载完成后调用 loadContent
        document.addEventListener('DOMContentLoaded', loadContent);

        // 删除用户
        function deleteUser(id) {
            if (confirm('确定要删除这个用户吗？')) {
                fetch(`/admin/users/${id}`, { method: 'DELETE' })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(err => Promise.reject(err));
                        }
                        return response.json();
                    })
                    .then(data => {
                        alert('用户删除成功');
                        loadUsers();
                    })
                    .catch(error => {
                        alert('删除用户失败: ' + (error.error || '未知错误'));
                    });
            }
        }

        // 删除内容
        function deleteContent(id) {
            if (confirm('确定要删除这个内容吗？')) {
                fetch(`/admin/content/${id}`, { method: 'DELETE' })
                    .then(() => loadContent());
            }
        }

        // 添加用户
        document.getElementById('addUserForm').onsubmit = function(e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const role = document.getElementById('role').value;
            const password = document.getElementById('password').value;
            fetch('/admin/users', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username, role, password })
            }).then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error);
                } else {
                    loadUsers();
                    this.reset();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('添加用户失败');
            });
        };

        // 添加新的函数用于加载订单
        function loadOrders() {
            fetch('/admin/orders')
                .then(response => response.json())
                .then(orders => {
                    const tbody = document.querySelector('#orderTable tbody');
                    tbody.innerHTML = '';
                    orders.forEach(order => {
                        tbody.innerHTML += `
                            <tr>
                                <td>${order.id}</td>
                                <td>${order.User ? order.User.username : 'N/A'}</td>
                                <td>${order.Content ? order.Content.id : 'N/A'}</td>
                                <td>${order.Content ? order.Content.simpleInfo : 'N/A'}</td>
                                <td>${new Date(order.createdAt).toLocaleString()}</td>
                                <td><button onclick="deleteOrder(${order.id})">删除</button></td>
                            </tr>
                        `;
                    });
                })
                .catch(error => console.error('Error loading orders:', error));
        }

        // 删除订单
        function deleteOrder(id) {
            if (confirm('确定要删除这个订单吗？')) {
                fetch(`/admin/orders/${id}`, { method: 'DELETE' })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(err => Promise.reject(err));
                        }
                        return response.json();
                    })
                    .then(data => {
                        alert('订单删除成功');
                        loadOrders();
                    })
                    .catch(error => {
                        console.error('删除失败:', error);
                        alert('删除订单失败: ' + (error.error || '未知错误'));
                    });
            }
        }

        // 标签切换函数
        function openTab(evt, tabName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tab-content");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tab");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(tabName).style.display = "block";
            evt.currentTarget.className += " active";

            // 加载相应的数据
            if (tabName === 'users') {
                loadUsers();
            } else if (tabName === 'content') {
                loadContent();
            } else if (tabName === 'orders') {
                loadOrders();
            } else if (tabName === 'invitationCodes') {
                loadInvitationCodes();
            }
        }

        // 页面加载完成后初始化
        document.addEventListener('DOMContentLoaded', function() {
            // 默认显示用户管理标签并加载第一页
            document.querySelector('.tab').click();
            loadUsers(1);
            // 初始化邀请码管理
            loadInvitationCodes();
        });

        function loadInvitationCodes() {
            fetch('/admin/invitation-codes')
                .then(response => response.json())
                .then(codes => {
                    const tbody = document.querySelector('#invitationCodeTable tbody');
                    tbody.innerHTML = '';
                    codes.forEach(code => {
                        tbody.innerHTML += `
                            <tr>
                                <td>${code.code}</td>
                                <td>${code.isUsed ? '已使用' : '未使用'}</td>
                                <td>${code.usedByUser ? code.usedByUser.username : 'N/A'}</td>
                                <td>${new Date(code.createdAt).toLocaleString()}</td>
                            </tr>
                        `;
                    });
                })
                .catch(error => console.error('Error loading invitation codes:', error));
        }

        function generateInvitationCode() {
            fetch('/admin/generate-invitation-code', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('新邀请码生成成功：' + data.code);
                        loadInvitationCodes();
                    } else {
                        alert('生成邀请码败：' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error generating invitation code:', error);
                    alert('生成邀请码失败');
                });
        }

        function searchUsers() {
            const searchTerm = document.getElementById('userSearchInput').value.trim();
            loadUsers(1, searchTerm);
        }
    </script>
</body>
</html>
